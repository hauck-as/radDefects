#!/bin/bash

shopt -s extglob
########################################
# help
########################################
Help()
{
   # Display Help
   echo "Automated sxdefectalign analysis of rad-induced defects using pydefect directory structure."
   echo
   echo "Syntax: bash ~/work/bin/radDefects/radDefects/auto_sxda [-h]"
   echo "options:"
   echo "h     Print this Help."
   echo
}

usage() { echo "Usage: $0 [-h]" 1>&2; exit 1; }

# get the options
while getopts ":h:" o; do
  case "${o}" in
    h) # display Help
      Help
      exit;;
    \?) # Invalid option
      echo "Error: Invalid option"
      usage
      exit;;
  esac
done
shift $((OPTIND-1))

########################################
# set variables for directories
########################################
base_path="${PWD}"

# pydefect directories
unitcell_path="${base_path}/unitcell/"
uc_opt_path="${unitcell_path}structure_opt/"
uc_band_path="${unitcell_path}band/"
uc_dos_path="${unitcell_path}dos/"
uc_dielec_path="${unitcell_path}dielectric/"

cpd_path="${base_path}/cpd/"

defect_path="${base_path}/defect/"
perfect_path="${defect_path}perfect/"

########################################
# unit conversion
########################################
# convert eV to Rydberg
eV2Ry () {
  echo "scale=16; ${1}*0.0734985857" | bc -l
}

########################################
# sxdefectalign vasp examples
########################################
# sxdefectalign --ecut 30 --charge -2 --eps 8.9 --center 0.5,0.5,0.5 --relative --vdef vacancy/LOCPOT --vref bulk/LOCPOT --vasp
# xmgrace-nxy vline-eV-a0.dat
# sxdefectalign --ecut 30 --charge -2 --eps 8.9 --center 0.5,0.5,0.5 --relative --vdef vacancy/LOCPOT --vref bulk/LOCPOT --vasp -C -0.12



########################################
# perform sxdefectalign analysis
########################################
# dielectric tensor notation: eps_xx,eps_xy,eps_xz,eps_xy,eps_yy,eps_yz,eps_xz,eps_yz,eps_zz
# gather dielectric tensor from unitcell.yaml
declare -a eps_ele=($(niet ".ele_dielectric_const" "${unitcell_path}unitcell.yaml" -f newline | grep -Eo '[+-]?[0-9]+([.][0-9]+)?'))
declare -a eps_ion=($(niet ".ion_dielectric_const" "${unitcell_path}unitcell.yaml" -f newline | grep -Eo '[+-]?[0-9]+([.][0-9]+)?'))
declare -a eps_tensor=()

for i in "${!eps_ele[@]}"; do
    eps_tensor+=($(bc -l <<< "${eps_ele[i]}+${eps_ion[i]}"))
done