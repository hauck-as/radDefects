#!/bin/bash
# tool for interfacing between pydefect and sxdefectalign

shopt -s extglob
########################################
# help
########################################
Help()
{
   # Display Help
   echo "Automated sxdefectalign analysis of rad-induced defects using pydefect directory structure."
   echo
   echo "Syntax: bash ~/work/bin/radDefects/radDefects/auto_sxda [-p|h]"
   echo "options:"
   echo "p     Plotting program choice or no plotting: gnuplot or none"
   echo "h     Print this Help."
   echo
}

usage() { echo "Usage: $0 [-h] [-p <gnuplot|none>]" 1>&2; exit 1; }

plot_prog="gnuplot"

# get the options
while getopts ":h:" o; do
  case "${o}" in
    h) # display Help
      Help
      exit;;
    p) # Enter plotting program
      plot_prog=${OPTARG}
      ((plot_prog == "gnuplot" || plot_prog == "none")) || usage
      ;;
    \?) # Invalid option
      echo "Error: Invalid option"
      usage
      exit;;
  esac
done
shift $((OPTIND-1))

########################################
# set variables for directories
########################################
base_path="${PWD}"
SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

# pydefect directories
unitcell_path="${base_path}/unitcell/"
uc_opt_path="${unitcell_path}structure_opt/"
uc_band_path="${unitcell_path}band/"
uc_dos_path="${unitcell_path}dos/"
uc_dielec_path="${unitcell_path}dielectric/"

cpd_path="${base_path}/cpd/"

defect_path="${base_path}/defect/"
perfect_path="${defect_path}perfect/"

########################################
# unit conversion and utility funcs
########################################
# convert eV to Rydberg
eV2Ry () {
  echo "scale=16; ${1}*0.0734985857" | bc -l
}

# join array by delimiter
# https://stackoverflow.com/a/17841619/24613079
function join_by { local IFS="$1"; shift; echo "$*"; }

########################################
# sxdefectalign vasp examples
########################################
# sxdefectalign --ecut 30 --charge -2 --eps 8.9 --center 0.5,0.5,0.5 --relative --vdef vacancy/LOCPOT --vref bulk/LOCPOT --vasp
# xmgrace-nxy vline-eV-a0.dat
# sxdefectalign --ecut 30 --charge -2 --eps 8.9 --center 0.5,0.5,0.5 --relative --vdef vacancy/LOCPOT --vref bulk/LOCPOT --vasp -C -0.12

# potential terms sxdefectalign = pydefect
# V(long-range) = V_{PC,q}
# V(defect)-V(ref) = V_{q/b}
# V(defect)-V(ref)-V(long-range) = dV_{PC,q/b}

########################################
# perform sxdefectalign analysis
########################################
# dielectric tensor notation: eps_xx,eps_xy,eps_xz,eps_xy,eps_yy,eps_yz,eps_xz,eps_yz,eps_zz
# gather dielectric tensor from unitcell.yaml
declare -a eps_ele=($(niet ".ele_dielectric_const" "${unitcell_path}unitcell.yaml" -f newline | grep -Eo '[+-]?[0-9]+([.][0-9]+)?')) || exit
declare -a eps_ion=($(niet ".ion_dielectric_const" "${unitcell_path}unitcell.yaml" -f newline | grep -Eo '[+-]?[0-9]+([.][0-9]+)?')) || exit
declare -a eps_tensor=()

for i in "${!eps_ele[@]}"; do
  eps_tensor+=($(bc -l <<< "${eps_ele[i]}+${eps_ion[i]}"))
done

eps_tensor_str=$(join_by , ${eps_tensor[@]})
echo "Dielectric tensor: ${eps_tensor_str}"

for def_dir in ${defect_path}*/; do
  # species from POSCAR
  declare -a element_arr=($(sed '6q;d' "${def_dir}POSCAR"))
  
  # defect_site_charge format
  defect=$(basename ${def_dir})
  defect_type=$(echo "${defect}" | rev | cut -d"_" -f2-  | rev)
  defect_chg=$(echo "${defect}" | rev | cut -d"_" -f1  | rev)
  
  echo "${defect_type} ${defect_chg}"
  
  # get and convert ENCUT from INCAR file
  encut_ev=$(grep ENCUT "${def_dir}INCAR" | grep -Eo '[0-9]+([.][0-9]+)?')
  encut_ry=$(eV2Ry ${encut_ev})
  
  echo "ENCUT = ${encut_ry} Ry"
  
  # defect center notation: x,y,z
  # gather defect center position from defect_entry.json
  declare -a defect_center=($(niet ".defect_center" "${def_dir}defect_entry.json" -f newline | grep -Eo '[+-]?[0-9]+([.][0-9]+)?')) || exit
  defect_center_str=$(join_by , ${defect_center[@]})
  
  echo "Defect position = (${defect_center_str})"
  
  # perform analysis using sxdefectalign
  cd ${def_dir}
  if [[ ${def_dir} == *"FP"* ]]; then
    sxdefectalign --ecut ${encut_ry} --charge ${defect_chg} --tensor ${eps_tensor_str} --center ${defect_center_str} --relative --vdef "${def_dir}LOCPOT" --vref "${perfect_path}LOCPOT" --vasp --format=matrix || exit
  else
    sxdefectalign --ecut ${encut_ry} --charge ${defect_chg} --tensor ${eps_tensor_str} --center ${defect_center_str} --relative --vdef "${def_dir}LOCPOT" --vref "${perfect_path}LOCPOT" --vasp --format=matrix || exit
  fi
  
  ########################################
  # perform plotting using gnuplot
  ########################################
  if [ "${plot_prog}" = "gnuplot" ]; then
    # vline-eV-a{0,1,2}.dat matrix format
    # z V(long-range) V(defect)-V(ref) V(defect)-V(ref)-V(long-range)
    gnuplot> call -c "${SCRIPT_DIR}/util/plnr_avgs.p" ${element_arr[@]}
  
    # vAtoms.dat format
    # r V(long-range) V(defect)-V(ref) V(defect)-V(ref)-V(long-range) x y z ...
    # empty lines between different species (need to include in plotting now)
    # replace empty lines with double empty lines to enable gnuplot index use
    sed -i -e 's/^$/\n/' vAtoms.dat
    gnuplot> call -c "${SCRIPT_DIR}/util/atomic_sph_avg.p" ${element_arr[@]}
  fi
  
  cd ../../
done